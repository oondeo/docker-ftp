#!/bin/bash
set -e


userConfPath="/etc/vsftpd/vsftpd.conf"
userConfFinalPath="/var/run/vsftpd.conf"
userListConfFinalPath="/var/run/vsftpd.chroot_list"
userListFinalPath="/var/run/user_list"

function printHelp() {
    echo "Add users as command arguments, STDIN or mounted in $userConfPath"
    echo "Syntax: user:pass[:e][:uid[:gid]]..."
    echo "Use --readme for more information and examples."
}

function printReadme() {
    echo "TIP: Read this in HTML format here: https://github.com/atmoz/sftp"
}

function createUser() {
    IFS=':' read -a param <<< $@
    user="${param[0]}"
    pass="${param[1]}"

    if [ "${param[2]}" == "e" ]; then
        chpasswdOptions="-e"
        uid="${param[3]}"
        gid="${param[4]}"
    else
        uid="${param[2]}"
        gid="${param[3]}"
    fi

    if [ -z "$user" ]; then
        echo "FATAL: You must at least provide a username."
        exit 1
    fi

    if $(cat /etc/passwd | cut -d: -f1 | grep -q "$user"); then
        echo "FATAL: User \"$user\" already exists."
        exit 2
    fi

    useraddOptions=" -D "

    if [ -n "$uid" ]; then
        useraddOptions="$useraddOptions -u $uid"
    fi

    if [ -n "$gid" ]; then
        if ! $(cat /etc/group | cut -d: -f3 | grep -q "$gid"); then
            addgroup -g $gid $gid
        fi

        useraddOptions="$useraddOptions -G $gid"
    fi

    echo $user >> $userListConfFinalPath
    adduser $useraddOptions $user
    mkdir -p /home/$user
    chown $user:root /home/$user
    chmod 755 /home/$user

    if [ -z "$pass" ]; then
        pass="$(tr -dc A-Za-z0-9 </dev/urandom | head -c256)"
        chpasswdOptions=""
    fi

    echo "$user:$pass" | chpasswd $chpasswdOptions

    # Add SSH keys to authorized_keys with valid permissions
    if [ -d /home/$user/.ssh/keys ]; then
        cat /home/$user/.ssh/keys/* >> /home/$user/.ssh/authorized_keys
        chown $user /home/$user/.ssh/authorized_keys
        chmod 600 /home/$user/.ssh/authorized_keys
    fi
}

if [[ $1 =~ ^--help$|^-h$ ]]; then
    printHelp
    exit 0
fi

if [ "$1" == "--readme" ]; then
    printReadme
    exit 0
fi

ftpcommand="ForceCommand /usr/lib/ssh/sftp-server"

if [ "$SSH" == "yes" ]; then
	ftpcommand=" "
fi

# Create users only on first run
if [ ! -f "$userConfFinalPath" ]; then
    
    # Append mounted config to final config
    if [ -f "$userConfPath" ]; then
        cat "$userConfPath" | grep -v -e '^$' > "$userConfFinalPath"
    else
	cp /etc/vsftpd.conf "$userConfFinalPath"
 	if [ "$CHROOT" == "yes" ]; then 
	  echo "chroot_local_user=YES" >> "$userConfFinalPath"
	  #echo "passwd_chroot_enable=YES" >> "$userConfFinalPath"
	  echo "chroot_list_enable=YES" >> "$userConfFinalPath"
	  echo "chroot_list_file=$userListConfFinalPath" >> "$userConfFinalPath"
	  echo "pasv_enable=YES" >> "$userConfFinalPath"
	  echo "pasv_max_port=$(echo $PORTS | cut -f2 -d':')" >> "$userConfFinalPath"
	  echo "pasv_min_port=$(echo $PORTS | cut -f1 -d':')" >> "$userConfFinalPath"
	
	  if [ "$ADDRESS" != "" ]; then
		echo "pasv_address=$ADDRESS" >> "$userConfFinalPath"
	  fi 
	fi
    fi

    # Append users from arguments to final config
    for user in "$@"; do
        echo "$user" >> "$userListFinalPath"
    done

    # Append users from STDIN to final config
    if [ ! -t 0 ]; then
        while IFS= read -r user || [[ -n "$user" ]]; do
            echo "$user" >> "$userListFinalPath"
        done
    fi

    # Check that we have users in config
    if [ "$(cat "$userListFinalPath" | wc -l)" == 0 ]; then
        echo "FATAL: No users provided!"
        printHelp
        exit 3
    fi

    # Import users from final conf file
    while IFS= read -r user || [[ -n "$user" ]]; do
        createUser "$user"
    done < "$userListFinalPath"

    # Generate unique ssh keys for this container
    #ssh-keygen -A || return 1
fi

# Source custom scripts, if any
if [ -d /etc/vsftpd/ftp.d ]; then
    for f in /etc/vsftpd/ftp.d/*; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi

